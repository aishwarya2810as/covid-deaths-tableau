<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='coviddeathstableauproject' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (TAB3)' inline='true' name='federated.13a2mls0k4nty810fuxaa0mh3bam' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TAB3' name='excel-direct.1swddlg0g1itr30zks6p31588fdn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AISHWARYA/Downloads/VIT Downloads/TAB3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1swddlg0g1itr30zks6p31588fdn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1swddlg0g1itr30zks6p31588fdn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2631DD6F4B5746108B77D28F1FAE03C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2631DD6F4B5746108B77D28F1FAE03C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2631DD6F4B5746108B77D28F1FAE03C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2631DD6F4B5746108B77D28F1FAE03C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2631DD6F4B5746108B77D28F1FAE03C3]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AISHWA~1/AppData/Local/Temp/TableauTemp/#TableauTemp_13filh716k2iky12eoon00p9tt7d.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/10/2024 01:20:32 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2631DD6F4B5746108B77D28F1FAE03C3'>
            <properties context=''>
              <relation connection='excel-direct.1swddlg0g1itr30zks6p31588fdn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TAB4)' inline='true' name='federated.19iu9ih0bt8fwg15fhjwf0qzylej' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TAB4' name='excel-direct.0myedv20muodc31bicbae1rhlplm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AISHWARYA/Downloads/VIT Downloads/TAB4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0myedv20muodc31bicbae1rhlplm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0myedv20muodc31bicbae1rhlplm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_31116FE6F18649D7B5538230B2B0A1CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_31116FE6F18649D7B5538230B2B0A1CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_31116FE6F18649D7B5538230B2B0A1CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_31116FE6F18649D7B5538230B2B0A1CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_31116FE6F18649D7B5538230B2B0A1CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_31116FE6F18649D7B5538230B2B0A1CB]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AISHWA~1/AppData/Local/Temp/TableauTemp/#TableauTemp_180f52z0hr672119y69zd1yt42ym.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/10/2024 01:24:32 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1197</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='sf_water' type='palette'>
            <map to='#051c61'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#073e92'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#0e6ece'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#2d9ced'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#96f2ee'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#96f2ee'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='sf_water' type='palette'>
            <map to='#051c61'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#051c61'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#073e92'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#073e92'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#0e6ece'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#0e6ece'>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#0e6ece'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2d9ced'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2d9ced'>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2d9ced'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#68ceee'>
              <multibucket>
                <bucket>&quot;Afghanistan&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#68ceee'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#68ceee'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#96f2ee'>
              <multibucket>
                <bucket>&quot;Afghanistan&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#96f2ee'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#96f2ee'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_31116FE6F18649D7B5538230B2B0A1CB'>
            <properties context=''>
              <relation connection='excel-direct.0myedv20muodc31bicbae1rhlplm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TAB1)' inline='true' name='federated.1h7fu8y0bidy1011eyfju1aj5p2k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TAB1' name='excel-direct.03khhj11ezcz9m16apvvn1ejjngn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AISHWARYA/Downloads/VIT Downloads/TAB1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03khhj11ezcz9m16apvvn1ejjngn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03khhj11ezcz9m16apvvn1ejjngn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_810C545DD82A4F33A3AC4E0E9B4CD25C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_810C545DD82A4F33A3AC4E0E9B4CD25C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_810C545DD82A4F33A3AC4E0E9B4CD25C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_810C545DD82A4F33A3AC4E0E9B4CD25C]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AISHWA~1/AppData/Local/Temp/TableauTemp/#TableauTemp_1ecki731w8ar8d1djc3hc1v6kqjl.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/10/2024 01:19:32 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_810C545DD82A4F33A3AC4E0E9B4CD25C'>
            <properties context=''>
              <relation connection='excel-direct.03khhj11ezcz9m16apvvn1ejjngn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TAB2)' inline='true' name='federated.1tl55ni0xzl8le1aiv09m1425vn7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TAB2' name='excel-direct.1c35ech19llewb10bqu3e17ih3bn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AISHWARYA/Downloads/VIT Downloads/TAB2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1c35ech19llewb10bqu3e17ih3bn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1c35ech19llewb10bqu3e17ih3bn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D79AE93A1FDE4E93BEF2F52F8DE052BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D79AE93A1FDE4E93BEF2F52F8DE052BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D79AE93A1FDE4E93BEF2F52F8DE052BD]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AISHWA~1/AppData/Local/Temp/TableauTemp/#TableauTemp_1tsuqk91b5pcnn1gixvzt1jeqnks.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/10/2024 01:20:19 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D79AE93A1FDE4E93BEF2F52F8DE052BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D79AE93A1FDE4E93BEF2F52F8DE052BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#5454aa'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#81beff'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#8599bd'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#8cadde'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9ec5ff'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#c7e7ff'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D79AE93A1FDE4E93BEF2F52F8DE052BD'>
            <properties context=''>
              <relation connection='excel-direct.1c35ech19llewb10bqu3e17ih3bn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TOTAL DEATHS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TAB1)' name='federated.1h7fu8y0bidy1011eyfju1aj5p2k' />
          </datasources>
          <datasource-dependencies datasource='federated.1h7fu8y0bidy1011eyfju1aj5p2k'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='62' />
            <format attr='width' field='[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[:Measure Names]' value='148' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f2f9f9' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{022C87E5-749D-414E-A2FE-FF64F97F5314}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GLOBAL NUMBERS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TAB2)' name='federated.1tl55ni0xzl8le1aiv09m1425vn7' />
          </datasources>
          <datasource-dependencies datasource='federated.1tl55ni0xzl8le1aiv09m1425vn7'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]' value='130' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c7edfd' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#00007f' />
                <format attr='size' value='1.2743645906448364' />
                <format attr='mark-transparency' value='203' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tl55ni0xzl8le1aiv09m1425vn7].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{E3542F06-5FC3-4CCC-9E1A-E9F71CCA76BC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>PERCENT POPULATION INFECTED PER COUNTRY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TAB3)' name='federated.13a2mls0k4nty810fuxaa0mh3bam' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13a2mls0k4nty810fuxaa0mh3bam'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13a2mls0k4nty810fuxaa0mh3bam].[Longitude (generated)]' field-type='quantitative' max='22179717.748989213' min='-15336205.454563163' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13a2mls0k4nty810fuxaa0mh3bam].[Latitude (generated)]' field-type='quantitative' max='12144799.108825356' min='-7969342.1902231863' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.13a2mls0k4nty810fuxaa0mh3bam].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13a2mls0k4nty810fuxaa0mh3bam].[none:Location:nk]' />
              <color column='[federated.13a2mls0k4nty810fuxaa0mh3bam].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.13a2mls0k4nty810fuxaa0mh3bam].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13a2mls0k4nty810fuxaa0mh3bam].[Latitude (generated)]</rows>
        <cols>[federated.13a2mls0k4nty810fuxaa0mh3bam].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1FE0BDEF-E5A7-48FD-8192-37174218815B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>PERCENT POPULATION INFECTED</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TAB4)' name='federated.19iu9ih0bt8fwg15fhjwf0qzylej' />
          </datasources>
          <datasource-dependencies datasource='federated.19iu9ih0bt8fwg15fhjwf0qzylej'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:Location:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[tmn:date:qk]' value='184' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]' />
              <text column='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]' />
              <color column='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Forecast Indicator:nk]' />
              <text column='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A1FF3441-C477-49B3-80CD-810F4061F2BA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='6' type-v2='layout-basic' w='91007' x='483' y='999'>
              <zone h='49063' id='3' name='Sheet 1' w='25318' x='66172' y='49938'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98002' id='5' name='Sheet 2' w='40372' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48939' id='10' name='Sheet 3' w='50635' x='40855' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49063' id='12' name='Sheet 4' w='25317' x='40855' y='49938'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='133' h='98002' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='8027' x='91490' y='999'>
              <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]' type-v2='color' w='8027' x='91490' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9114' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.13a2mls0k4nty810fuxaa0mh3bam].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8027' x='91490' y='20475'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45693' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]&#10;[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Forecast Indicator:nk]' type-v2='color' w='8027' x='91490' y='29589'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='16' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='280' h='98002' id='5' is-fixed='true' name='Sheet 2' w='40372' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]' type-v2='color' w='8027' x='91490' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48939' id='10' is-fixed='true' name='Sheet 3' w='50635' x='40855' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.13a2mls0k4nty810fuxaa0mh3bam].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8027' x='91490' y='20475'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49063' id='12' is-fixed='true' name='Sheet 4' w='25317' x='40855' y='49938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45693' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]&#10;[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Forecast Indicator:nk]' type-v2='color' w='8027' x='91490' y='29589'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49063' id='3' is-fixed='true' name='Sheet 1' w='25318' x='66172' y='49938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{84C6B8AD-056C-4E72-928C-519C39CA3D0A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h7fu8y0bidy1011eyfju1aj5p2k].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE0FF980-1C93-4B88-88D9-54EC0B342949}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19337DB0-F013-4205-B0D5-D30146C72CD4}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13a2mls0k4nty810fuxaa0mh3bam].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13a2mls0k4nty810fuxaa0mh3bam].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EB557AC-EEE5-4296-AD71-D65146AE173B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]&#10;[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Forecast Indicator:nk]</field>
            <field>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]</field>
            <field>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE80AF2F-9E02-4555-9B44-C1FE87869A7F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1tl55ni0xzl8le1aiv09m1425vn7].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Forecast Indicator:nk]</field>
              <field>[federated.19iu9ih0bt8fwg15fhjwf0qzylej].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{504CAEDD-7FAB-4C9D-A7F5-A412548441E6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='106' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      WgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
